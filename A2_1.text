package os;

import java.util.Arrays;
import java.util.Scanner;

public class Assignment2 {
    static class Process {
        String p_name;
        int at, st, bt, ft, tat, wt;
    }

    public static void Fcfs() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter total number of processes: ");
        int n = scanner.nextInt();
        Process[] p = new Process[n]; // Initialize with size n

        for (int i = 0; i < n; i++) {
            p[i] = new Process();
            System.out.print("Enter process name: ");
            p[i].p_name = scanner.next();
            System.out.print("Enter arrival time: ");
            p[i].at = scanner.nextInt();
            System.out.print("Enter burst time: ");
            p[i].bt = scanner.nextInt();
        }

        // Sort processes by arrival time
        Arrays.sort(p, (a, b) -> Integer.compare(a.at, b.at));

        for (int i = 0; i < n; i++) {
            if (i == 0) {
                p[i].st = p[i].at;
                p[i].ft = p[i].at + p[i].bt;
            } else {
                if (p[i].at <= p[i - 1].ft) {
                    p[i].st = p[i - 1].ft;
                    p[i].ft = p[i].st + p[i].bt;
                } else {
                    p[i].st = p[i].at;
                    p[i].ft = p[i].st + p[i].bt;
                }
            }
        }

        for (int i = 0; i < n; i++) {
            p[i].tat = p[i].ft - p[i].at;
            p[i].wt = p[i].tat - p[i].bt;
        }

        System.out.println("\nProcess Name\tArrival Time\tStart Time\tBurst Time\tFinish Time\tTurnaround Time\tWait Time");
        int totalWaitTime = 0;
        int totalTurnaroundTime = 0;
        for (int i = 0; i < n; i++) {
            System.out.println(p[i].p_name + "\t\t" + p[i].at + "\t\t" + p[i].st + "\t\t" + p[i].bt + "\t\t" + p[i].ft + "\t\t" + p[i].tat + "\t\t" + p[i].wt);
            totalWaitTime += p[i].wt;
            totalTurnaroundTime += p[i].tat;
        }
        System.out.println("Average Wait Time: " + ((float) totalWaitTime / n));
        System.out.println("Average Turnaround Time: " + ((float) totalTurnaroundTime / n));

        // Printing Gantt Chart
        System.out.println("\nGantt Chart");
        System.out.print("______________________________________________________________________________________________________\n");
        for (int i = 0; i < n; i++) {
            if (i == 0)
                System.out.print("| " + p[i].p_name + "\t\t");
            else {
                if (p[i].st != p[i - 1].ft)
                    System.out.print("| idle\t\t");
                System.out.print("| " + p[i].p_name + "\t\t");
            }
        }
        System.out.print(" |\n");
        System.out.print("______________________________________________________________________________________________________\n");
        for (int i = 0; i < n; i++) {
            if (i == 0) {
                System.out.print(" " + p[i].at + "\t\t");
                System.out.print(" " + p[i].ft + "\t\t");
            } else {
                if (p[i].st != p[i - 1].ft)
                    System.out.print(" " + p[i].at + "\t\t");
                System.out.print(" " + p[i].ft + "\t\t");
            }
        }
        System.out.println();
    }
    public static void main(String[] args) {
		Fcfs();
	}
    
    
}
